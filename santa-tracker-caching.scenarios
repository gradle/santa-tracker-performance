# Performance scenarios for santa-tracker-android project to measure next generation build cache performance

file-to-change  = "common/src/main/java/com/google/android/apps/santatracker/AudioPlayer.kt"
tasks-to-measure = [":santa-tracker:assembleDebug"]

scenario-base = {
    clear-project-cache-before = SCENARIO
    clear-build-cache-before = SCENARIO

    show-build-cache-size = true

    gradle-args = [
        "-Dorg.gradle.workers.max=8",
        "--no-scan",

        "--watch-fs",
        "--configuration-cache",
        "--configuration-cache-problems=warn"
    ]

    tasks = ${tasks-to-measure}
}

http-cache-config = {
    gradle-args = ["-I../http-cache.gradle"]
}

build-cache-off = {
    gradle-args = ["--no-build-cache"]
}

build-cache-baseline = {
    gradle-args = ["--build-cache"]
}

build-cache-baseline-http = ${build-cache-baseline} {
    gradle-args = ${build-cache-baseline.gradle-args} ${http-cache-config.gradle-args}
}

build-cache-ng = {
    gradle-args = ["--build-cache", "-Dorg.gradle.unsafe.cache.ng=true"]
}

build-cache-ng-http = ${build-cache-ng} {
    gradle-args = ${build-cache-ng.gradle-args} ${http-cache-config.gradle-args}
}

# Local change scenarios

scenario-local-change = ${scenario-base} {
    # Mutate the given source file between builds
    apply-non-abi-change-to = ${file-to-change}
}

benchmark-local-change-no-cache = ${scenario-local-change} {
    title = "Local change - no cache"
    gradle-args = ${scenario-local-change.gradle-args} ${build-cache-off.gradle-args}
}

benchmark-local-change-baseline = ${scenario-local-change} {
    title = "Local change - baseline cache"
    gradle-args = ${scenario-local-change.gradle-args} ${build-cache-baseline.gradle-args}
}

benchmark-local-change-ng = ${scenario-local-change} {
    title = "Local change - cache NG"
    gradle-args = ${scenario-local-change.gradle-args} ${build-cache-ng.gradle-args}
}

benchmark-local-change-baseline-http = ${scenario-local-change} {
    title = "Local change - baseline cache w/ HTTP remote"
    gradle-args = ${scenario-local-change.gradle-args} ${build-cache-baseline-http.gradle-args}
}

benchmark-local-change-ng-http = ${scenario-local-change} {
    title = "Local change - cache NG w/ HTTP remote"
    gradle-args = ${scenario-local-change.gradle-args} ${build-cache-ng-http.gradle-args}
}

# Clean build scenarios

scenario-clean-build = ${scenario-base} {
    # Clean the project between builds
    cleanup-tasks = ["clean"]
}

benchmark-clean-build-no-cache = ${scenario-clean-build} {
    title = "Clean build - no cache"
    gradle-args = ${scenario-clean-build.gradle-args} ${build-cache-off.gradle-args}
}

benchmark-clean-build-baseline = ${scenario-clean-build} {
    title = "Clean build - baseline cache"
    gradle-args = ${scenario-clean-build.gradle-args} ${build-cache-baseline.gradle-args}
}

benchmark-clean-build-ng = ${scenario-clean-build} {
    title = "Clean build - cache NG"
    gradle-args = ${scenario-clean-build.gradle-args} ${build-cache-ng.gradle-args}
}

benchmark-clean-build-baseline-http = ${scenario-clean-build} {
    title = "Clean build - baseline cache w/ HTTP remote"
    gradle-args = ${scenario-clean-build.gradle-args} ${build-cache-baseline-http.gradle-args}
}

benchmark-clean-build-ng-http = ${scenario-clean-build} {
    title = "Clean build - cache NG w/ HTTP remote"
    gradle-args = ${scenario-clean-build.gradle-args} ${build-cache-ng-http.gradle-args}
}


# Pull everything scerarios

scenario-pull-everything = ${scenario-base} {
    # Clean the project between builds
    cleanup-tasks = ["clean"]

    # Clean the build cache between builds
    clear-build-cache-before = BUILD

    # Use a cold daemon to allow for cache cleanup between builds
    daemon = cold
}

benchmark-pull-everything-baseline-http = ${scenario-pull-everything} {
    title = "Pull everything - baseline cache w/ HTTP remote"
    gradle-args = ${scenario-pull-everything.gradle-args} ${build-cache-baseline-http.gradle-args}
}

benchmark-pull-everything-ng-http = ${scenario-pull-everything} {
    title = "Pull everything - cache NG w/ HTTP remote"
    gradle-args = ${scenario-pull-everything.gradle-args} ${build-cache-ng-http.gradle-args}
}
